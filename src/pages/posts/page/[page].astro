---
import {
  getPostsByPage,
  getRankedPosts,
  getAllTags,
  getAllPosts,
  getNumberOfPages,
  getPostsByPage,
} from '../../../lib/notion/client.ts'
import Layout from '../../../layouts/Layout.astro'
import NoContents from '../../../components/NoContents.astro'
import PostDate from '../../../components/PostDate.astro'
import PostTags from '../../../components/PostTags.astro'
import PostTitle from '../../../components/PostTitle.astro'
import PostFeaturedImage from '../../../components/PostFeaturedImage.astro'
import PostExcerpt from '../../../components/PostExcerpt.astro'
import ReadMoreLink from '../../../components/ReadMoreLink.astro'
import Pagination from '../../../components/Pagination.astro'
import BlogPostsLink from '../../../components/BlogPostsLink.astro'
import BlogTagsLink from '../../../components/BlogTagsLink.astro'
import styles from '../../../styles/blog.module.css'
import { NUMBER_OF_POSTS_PER_PAGE } from '../../../server-constants.ts'

export async function getStaticPaths() {
  const numberOfPages = await getNumberOfPages()

  let params = []
  for (let i = 2; i <= numberOfPages; i++) {
    params.push({ params: { page: i.toString() } })
  }
  return params
}

const { page } = Astro.params

const [posts, recentPosts, rankedPosts, tags, numberOfPages] =
  await Promise.all([
    getPostsByPage(parseInt(page, 10)),
    getAllPosts(NUMBER_OF_POSTS_PER_PAGE),
    getRankedPosts(),
    getAllTags(),
    getNumberOfPages(),
  ])
---

<Layout title={`Posts ${page}/${numberOfPages}`} path={`/posts/page/${page}`}>
  <div slot="main" class={styles.main}>
    <header>
      <div class="page-container">{page}/{numberOfPages}</div>
    </header>

    {
      posts.length === 0 ? (
        <NoContents contents={posts} />
      ) : (
        posts.map((post) => (
          <div class={styles.post_item} key={post.Slug}>
            <PostFeaturedImage post={post} />
            <div class={styles.post_content}>
              <PostDate post={post} />
              <PostTitle post={post} />
              <PostTags post={post} />
              <ReadMoreLink post={post} />
            </div>
          </div>
        ))
      )
    }

    <footer>
      <Pagination
        currentPage={parseInt(page, 10)}
        numberOfPages={numberOfPages}
      />
    </footer>
  </div>

  <div slot="aside" class={styles.aside}>
    <BlogPostsLink heading="最新の記事" posts={recentPosts} />
    <BlogTagsLink heading="カテゴリ" tags={tags} />
  </div>
</Layout>

<style>
  .page-container {
    margin: 0;
    line-height: 1.3;
    font-size: 1.2rem;
    font-weight: normal;
  }
  @media (max-width: 900px) {
    .page-container {
      font-size: 1.15rem;
    }
  }
</style>
